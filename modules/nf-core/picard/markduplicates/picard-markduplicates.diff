Changes in module 'nf-core/picard/markduplicates'
--- modules/nf-core/picard/markduplicates/main.nf
+++ modules/nf-core/picard/markduplicates/main.nf
@@ -4,17 +4,16 @@
 
     conda "${moduleDir}/environment.yml"
     container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
-        'https://depot.galaxyproject.org/singularity/picard:3.1.1--hdfd78af_0' :
-        'biocontainers/picard:3.1.1--hdfd78af_0' }"
+        'https://depot.galaxyproject.org/singularity/mulled-v2-faf8276e4ce95c7ed33ebd0a33c53621fc720774:fe25dd03855090ac1ab4a90a97f2fff19641c7da-0' :
+        'biocontainers/mulled-v2-faf8276e4ce95c7ed33ebd0a33c53621fc720774:fe25dd03855090ac1ab4a90a97f2fff19641c7da-0' }"
 
     input:
-    tuple val(meta), path(bam)
-    tuple val(meta2), path(fasta)
-    tuple val(meta3), path(fai)
+    tuple val(meta),    path(cram)
+    tuple val(meta2),   path(fasta)
+    tuple val(meta3),   path(fai)
 
     output:
-    tuple val(meta), path("*.bam")        , emit: bam
-    tuple val(meta), path("*.bai")        , optional:true, emit: bai
+    tuple val(meta), path("*.cram")       , emit: cram
     tuple val(meta), path("*.metrics.txt"), emit: metrics
     path  "versions.yml"                  , emit: versions
 
@@ -23,6 +22,7 @@
 
     script:
     def args = task.ext.args ?: ''
+    def args2 = task.ext.args2 ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
     def avail_mem = 3072
     if (!task.memory) {
@@ -31,35 +31,39 @@
         avail_mem = (task.memory.mega*0.8).intValue()
     }
 
-    if ("$bam" == "${prefix}.bam") error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
+    if ("$cram" == "${prefix}.cram") error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
 
     """
+    mkfifo picard_output
+
     picard \\
         -Xmx${avail_mem}M \\
         MarkDuplicates \\
         $args \\
-        --INPUT $bam \\
-        --OUTPUT ${prefix}.bam \\
+        --INPUT $cram \\
+        --OUTPUT picard_output \\
         --REFERENCE_SEQUENCE $fasta \\
-        --METRICS_FILE ${prefix}.MarkDuplicates.metrics.txt
+        --METRICS_FILE ${prefix}.MarkDuplicates.metrics.txt &
+    samtools view $args2 --threads $task.cpus -O cram -o ${prefix}.cram picard_output
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
         picard: \$(echo \$(picard MarkDuplicates --version 2>&1) | grep -o 'Version:.*' | cut -f2- -d:)
+        samtools: \$(echo \$(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*\$//')
     END_VERSIONS
     """
 
     stub:
     def prefix = task.ext.prefix ?: "${meta.id}"
-    if ("$bam" == "${prefix}.bam") error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
+    if ("$cram" == "${prefix}.cram") error "Input and output names are the same, use \"task.ext.prefix\" to disambiguate!"
     """
-    touch ${prefix}.bam
-    touch ${prefix}.bam.bai
+    touch ${prefix}.cram
     touch ${prefix}.MarkDuplicates.metrics.txt
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
         picard: \$(echo \$(picard MarkDuplicates --version 2>&1) | grep -o 'Version:.*' | cut -f2- -d:)
+        samtools: \$(echo \$(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*\$//')
     END_VERSIONS
     """
 }

--- modules/nf-core/picard/markduplicates/environment.yml
+++ modules/nf-core/picard/markduplicates/environment.yml
@@ -5,3 +5,4 @@
   - defaults
 dependencies:
   - bioconda::picard=3.1.1
+  - bioconda::samtools=1.19.2

************************************************************
